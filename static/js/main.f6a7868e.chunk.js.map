{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","myfun","id","alt","name","src","image","occupation","location","Wrapper","children","Title","score","topScore","App","state","friends","resetClick","newFriends","map","friend","clicked","setState","click","updatedFriends","console","log","NewArray","sort","Math","random","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"guFA2BeA,MAxBf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,QAAS,kBAAMF,EAAMG,MAAMH,EAAMI,KAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEzE,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,+CADF,IACgCN,EAAMS,YAEtC,4BACE,6CADF,IAC8BT,EAAMU,c,MCX/BC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAAd,UAA8BD,EAAMc,MAApC,gBAAwDd,EAAMe,W,OCqGxDC,E,2MAjGXC,MAAQ,CACJC,UACAJ,MAAO,EACPC,SAAU,G,EAGdI,WAAa,WACT,IAAMC,EAAa,EAAKH,MAAMC,QAAQG,IAAI,SAAAC,GAGtC,OADAA,EAAOC,SAAU,EACVD,IAEX,EAAKE,SAAS,CACVN,QAASE,K,EAKjBK,MAAQ,SAAArB,GAEJ,IAAMsB,EAAiB,EAAKT,MAAMC,QAAQG,IAAI,SAAAC,GAmC1C,OAjCIlB,IAAOkB,EAAOlB,KAGVkB,EAAOC,SACP,EAAKC,SAAS,CACVV,MAAO,IAEX,EAAKK,eAID,EAAKF,MAAMH,OAAS,EAAKG,MAAMF,SAC/B,EAAKS,SAAS,CACVV,MAAO,EAAKG,MAAMH,MAAQ,EAC1BC,SAAU,EAAKE,MAAMF,SAAW,IAGpC,EAAKS,SAAS,CACVV,MAAO,EAAKG,MAAMH,MAAQ,IAI7BQ,EAAOC,UACRD,EAAOC,SAAU,KAUtBD,IAIXK,QAAQC,IAAIF,GAEZ,EAAKF,SAAS,CAAEN,QAASQ,IAEzB,IAAMG,EAAW,EAAKZ,MAAMC,QAAQY,KAAK,kBAAMC,KAAKC,SAAW,KAE/D,EAAKR,SAAS,CAAEN,QAASW,K,wEAOnB,IAAD,OACL,OACK,kBAAC,EAAD,KAED,kBAAC,EAAD,CACAhB,OAAK,EAACC,MAAUmB,KAAKhB,MAAMH,MAC3BC,SAAakB,KAAKhB,MAAMF,WAGpBkB,KAAKhB,MAAMC,QAAQG,IAAI,SAAAC,GAAM,OACzB,kBAAC,EAAD,CAAYnB,MAAU,EAAKsB,MAC3BrB,GAAOkB,EAAOlB,GACd8B,IAAQZ,EAAOlB,GACfE,KAASgB,EAAOhB,KAChBE,MAAUc,EAAOd,MACjBC,WAAea,EAAOb,WACtBC,SAAaY,EAAOZ,kB,GA1FtByB,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f6a7868e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img onClick={() => props.myfun(props.id)} alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n  \n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">Score: {props.score} | Top Score:{props.topScore}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n    // Setting this.state.friends to the friends json array\n    state = {\n        friends,\n        score: 0,\n        topScore: 0\n    }\n\n    resetClick = () => {\n        const newFriends = this.state.friends.map(friend => {\n\n            friend.clicked = false;\n            return friend\n        })\n        this.setState({\n            friends: newFriends\n        })\n    }\n\n\n    click = id => {\n\n        const updatedFriends = this.state.friends.map(friend => {\n\n            if (id === friend.id) {\n\n\n                if (friend.clicked) {\n                    this.setState({\n                        score: 0\n                    })\n                    this.resetClick()\n\n                } else {\n\n                    if (this.state.score >= this.state.topScore) {\n                        this.setState({\n                            score: this.state.score + 1,\n                            topScore: this.state.topScore + 1\n                        })\n                    } else {\n                        this.setState({\n                            score: this.state.score + 1\n\n                        })\n                    }\n                    if (!friend.clicked) {\n                        friend.clicked = true;\n                    }\n\n\n\n                }\n\n            }\n\n\n            return friend;\n\n        });\n\n        console.log(updatedFriends)\n\n        this.setState({ friends: updatedFriends })\n\n        const NewArray = this.state.friends.sort(() => Math.random() - 0.5)\n\n        this.setState({ friends: NewArray })\n\n\n\n    }\n\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    render() {\n        return (\n             <Wrapper>\n\n            <Title \n            Title score = { this.state.score }\n            topScore = { this.state.topScore } />  \n\n            {\n                this.state.friends.map(friend => (  \n                    <FriendCard myfun = { this.click }\n                    id = { friend.id }\n                    key = { friend.id }\n                    name = { friend.name }\n                    image = { friend.image }\n                    occupation = { friend.occupation }\n                    location = { friend.location }\n                    />\n                ))\n            } \n            \n            </Wrapper>);\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}